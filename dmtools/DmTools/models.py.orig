from django.db import models
from django.contrib.auth.models import User

class Campaigns(models.Model):
  Name = models.CharField(max_length=500,primary_key=True)
  Number_Player = models.IntegerField(null=True)
  DmName = models.CharField(max_length=150)
  Password = models.CharField(default="password",max_length=50)
  def save(self,commit = True, *args, **kwargs):
    if(commit==True):
      super(Campaigns,self).save(*args,**kwargs)
<<<<<<< HEAD
class Characters(models.Model):
  user = models.ForeignKey(User,on_delete=models.CASCADE)
  Name = models.CharField(max_length=150)
  #Player = models.OneToOneField(Players,on_delete=models.CASCADE,default="20000")
||||||| merged common ancestors
=======
class Characters(models.Model):
  user = models.ForeignKey(User,on_delete=models.CASCADE)
  Name = models.CharField(max_length=150)
  ClassLevel = models.CharField(max_length=30,default = "none")
  Background = models.CharField(max_length=30,default = "none")
  Race = models.CharField(max_length=30,default = "none")
  Alignment = models.CharField(max_length=50,default = "none")
  ExpierincePoints = models.IntegerField(default=0)
  ArmorClass = models.IntegerField(default=0)
  Inititative = models.IntegerField(default=0)
  Speed = models.IntegerField(default=0)
  ProficencyBonus = models.IntegerField(default=0)
  Strength = models.IntegerField(default=0)
  Dexterity = models.IntegerField(default=0)
  Constituion = models.IntegerField(default=0)
  Intelligence = models.IntegerField(default=0)
  Wisdom = models.IntegerField(default=0)
  Charisma = models.IntegerField(default=0)
  Acrobatics = models.IntegerField(default=0)
  AnimalHandling = models.IntegerField(default=0)
  Arcana = models.IntegerField(default=0)
  Athletics = models.IntegerField(default=0)
  Deception = models.IntegerField(default=0)
  History = models.IntegerField(default=0)
  Insight = models.IntegerField(default=0)
  Intimidation = models.IntegerField(default=0)
  Investigation = models.IntegerField(default=0)
  Medicine = models.IntegerField(default=0)
  Nature = models.IntegerField(default=0)
  Perception = models.IntegerField(default=0)
  Performance = models.IntegerField(default=0)
  Persuasion = models.IntegerField(default=0)
  Religion = models.IntegerField(default=0)
  SleightOfHand = models.IntegerField(default=0)
  Stealth = models.IntegerField(default=0)
  Survival = models.IntegerField(default=0)
  PassiveWisdom = models.IntegerField(default=0)
  Proficiencies = models.CharField(max_length = 200,default = "none")
  Languages = models.CharField(max_length = 200,default = "none")
  HitPointMaximum = models.IntegerField(default=0)
  Cantrips = models.CharField(max_length = 500,default = "none")
  SpellSlots = models.CharField(max_length = 300,default = "none")
  PreparedSpells = models.CharField(max_length = 300,default = "none")
  Spellbook = models.CharField(max_length = 500,default = "none")
  Equipment = models.CharField(max_length = 1000,default = "none")
  PersonalityTraits = models.CharField(max_length = 500,default = "none")
  Ideals = models.CharField(max_length = 300,default = "none")
  Bonds = models.CharField(max_length = 300,default = "none")
  Flaws = models.CharField(max_length = 300,default = "none")
  SpellcastingAbility = models.CharField(max_length = 500,default = "none")
  ArcaneRecovery = models.CharField(max_length = 300,default = "none")
  Darkvision = models.CharField(max_length = 500,default = "none")
  FeyAncestry = models.CharField(max_length = 300,default = "none")
  Trance = models.CharField(max_length = 300,default = "none")
  ShelterOfTheFaithful = models.CharField(max_length = 1000,default = "none")
  #Player = models.OneToOneField(Players,on_delete=models.CASCADE,default="20000")
>>>>>>> f656f7f4ebd638a985d4e5a3eb2142a080db58aa
class Players(models.Model):
  Campaign = models.ForeignKey(Campaigns,on_delete=models.CASCADE)
  Character = models.CharField(max_length=150,default="None")
  user = models.CharField(max_length=150)
  def save(self,*args,**kwargs):
    super(Players,self).save(*args,**kwargs)
class Invitations(models.Model):
  Campaign = models.CharField(max_length=500)
  DM = models.CharField(max_length=150)
  User = models.CharField(max_length=150)
  def save(self,commit=True,*args,**kwargs):
    if(commit==True):
      super(Invitations,self).save(*args,**kwargs)

# Create your models here.
